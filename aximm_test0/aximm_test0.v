// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="aximm_test0_aximm_test0,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu4ev-fbvb900-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2647,HLS_SYN_LUT=3176,HLS_VERSION=2024_2}" *)

module aximm_test0 (
        ap_clk,
        ap_rst_n,
        m_axi_mm_video0_AWVALID,
        m_axi_mm_video0_AWREADY,
        m_axi_mm_video0_AWADDR,
        m_axi_mm_video0_AWID,
        m_axi_mm_video0_AWLEN,
        m_axi_mm_video0_AWSIZE,
        m_axi_mm_video0_AWBURST,
        m_axi_mm_video0_AWLOCK,
        m_axi_mm_video0_AWCACHE,
        m_axi_mm_video0_AWPROT,
        m_axi_mm_video0_AWQOS,
        m_axi_mm_video0_AWREGION,
        m_axi_mm_video0_AWUSER,
        m_axi_mm_video0_WVALID,
        m_axi_mm_video0_WREADY,
        m_axi_mm_video0_WDATA,
        m_axi_mm_video0_WSTRB,
        m_axi_mm_video0_WLAST,
        m_axi_mm_video0_WID,
        m_axi_mm_video0_WUSER,
        m_axi_mm_video0_ARVALID,
        m_axi_mm_video0_ARREADY,
        m_axi_mm_video0_ARADDR,
        m_axi_mm_video0_ARID,
        m_axi_mm_video0_ARLEN,
        m_axi_mm_video0_ARSIZE,
        m_axi_mm_video0_ARBURST,
        m_axi_mm_video0_ARLOCK,
        m_axi_mm_video0_ARCACHE,
        m_axi_mm_video0_ARPROT,
        m_axi_mm_video0_ARQOS,
        m_axi_mm_video0_ARREGION,
        m_axi_mm_video0_ARUSER,
        m_axi_mm_video0_RVALID,
        m_axi_mm_video0_RREADY,
        m_axi_mm_video0_RDATA,
        m_axi_mm_video0_RLAST,
        m_axi_mm_video0_RID,
        m_axi_mm_video0_RUSER,
        m_axi_mm_video0_RRESP,
        m_axi_mm_video0_BVALID,
        m_axi_mm_video0_BREADY,
        m_axi_mm_video0_BRESP,
        m_axi_mm_video0_BID,
        m_axi_mm_video0_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MM_VIDEO0_ID_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_ADDR_WIDTH = 64;
parameter    C_M_AXI_MM_VIDEO0_DATA_WIDTH = 128;
parameter    C_M_AXI_MM_VIDEO0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_WUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_RUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_BUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO0_USER_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO0_PROT_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MM_VIDEO0_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mm_video0_AWVALID;
input   m_axi_mm_video0_AWREADY;
output  [C_M_AXI_MM_VIDEO0_ADDR_WIDTH - 1:0] m_axi_mm_video0_AWADDR;
output  [C_M_AXI_MM_VIDEO0_ID_WIDTH - 1:0] m_axi_mm_video0_AWID;
output  [7:0] m_axi_mm_video0_AWLEN;
output  [2:0] m_axi_mm_video0_AWSIZE;
output  [1:0] m_axi_mm_video0_AWBURST;
output  [1:0] m_axi_mm_video0_AWLOCK;
output  [3:0] m_axi_mm_video0_AWCACHE;
output  [2:0] m_axi_mm_video0_AWPROT;
output  [3:0] m_axi_mm_video0_AWQOS;
output  [3:0] m_axi_mm_video0_AWREGION;
output  [C_M_AXI_MM_VIDEO0_AWUSER_WIDTH - 1:0] m_axi_mm_video0_AWUSER;
output   m_axi_mm_video0_WVALID;
input   m_axi_mm_video0_WREADY;
output  [C_M_AXI_MM_VIDEO0_DATA_WIDTH - 1:0] m_axi_mm_video0_WDATA;
output  [C_M_AXI_MM_VIDEO0_WSTRB_WIDTH - 1:0] m_axi_mm_video0_WSTRB;
output   m_axi_mm_video0_WLAST;
output  [C_M_AXI_MM_VIDEO0_ID_WIDTH - 1:0] m_axi_mm_video0_WID;
output  [C_M_AXI_MM_VIDEO0_WUSER_WIDTH - 1:0] m_axi_mm_video0_WUSER;
output   m_axi_mm_video0_ARVALID;
input   m_axi_mm_video0_ARREADY;
output  [C_M_AXI_MM_VIDEO0_ADDR_WIDTH - 1:0] m_axi_mm_video0_ARADDR;
output  [C_M_AXI_MM_VIDEO0_ID_WIDTH - 1:0] m_axi_mm_video0_ARID;
output  [7:0] m_axi_mm_video0_ARLEN;
output  [2:0] m_axi_mm_video0_ARSIZE;
output  [1:0] m_axi_mm_video0_ARBURST;
output  [1:0] m_axi_mm_video0_ARLOCK;
output  [3:0] m_axi_mm_video0_ARCACHE;
output  [2:0] m_axi_mm_video0_ARPROT;
output  [3:0] m_axi_mm_video0_ARQOS;
output  [3:0] m_axi_mm_video0_ARREGION;
output  [C_M_AXI_MM_VIDEO0_ARUSER_WIDTH - 1:0] m_axi_mm_video0_ARUSER;
input   m_axi_mm_video0_RVALID;
output   m_axi_mm_video0_RREADY;
input  [C_M_AXI_MM_VIDEO0_DATA_WIDTH - 1:0] m_axi_mm_video0_RDATA;
input   m_axi_mm_video0_RLAST;
input  [C_M_AXI_MM_VIDEO0_ID_WIDTH - 1:0] m_axi_mm_video0_RID;
input  [C_M_AXI_MM_VIDEO0_RUSER_WIDTH - 1:0] m_axi_mm_video0_RUSER;
input  [1:0] m_axi_mm_video0_RRESP;
input   m_axi_mm_video0_BVALID;
output   m_axi_mm_video0_BREADY;
input  [1:0] m_axi_mm_video0_BRESP;
input  [C_M_AXI_MM_VIDEO0_ID_WIDTH - 1:0] m_axi_mm_video0_BID;
input  [C_M_AXI_MM_VIDEO0_BUSER_WIDTH - 1:0] m_axi_mm_video0_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] pDstY0;
wire   [63:0] pDstUV0;
wire   [63:0] pDstY1;
wire   [63:0] pDstUV1;
wire   [31:0] nDstStrideY;
wire   [31:0] nDstStrideUV;
wire   [31:0] nWidth;
wire   [31:0] nHeight;
wire   [31:0] nControl;
reg   [63:0] pDstUV1_read_reg_415;
reg   [63:0] pDstY1_read_reg_420;
reg   [63:0] pDstUV0_read_reg_425;
reg   [63:0] pDstY0_read_reg_430;
reg   [30:0] trunc_ln_reg_435;
wire   [31:0] zext_ln35_fu_210_p1;
reg   [31:0] zext_ln35_reg_440;
wire   [31:0] zext_ln36_fu_224_p1;
reg   [31:0] zext_ln36_reg_445;
reg   [27:0] trunc_ln1_reg_450;
reg   [30:0] i_1_reg_456;
wire    ap_CS_fsm_state2;
reg   [59:0] trunc_ln2_reg_466;
reg   [59:0] trunc_ln55_1_reg_471;
reg   [59:0] trunc_ln3_reg_476;
reg   [59:0] trunc_ln63_1_reg_481;
wire   [27:0] shl_ln_fu_385_p3;
reg   [27:0] shl_ln_reg_486;
wire    ap_CS_fsm_state3;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_done;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_idle;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_ready;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWVALID;
wire   [63:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWADDR;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWID;
wire   [31:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWLEN;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWSIZE;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWBURST;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWLOCK;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWCACHE;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWPROT;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWQOS;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWREGION;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWUSER;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WVALID;
wire   [127:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WDATA;
wire   [15:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WSTRB;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WLAST;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WID;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WUSER;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARVALID;
wire   [63:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARADDR;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARID;
wire   [31:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARLEN;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARSIZE;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARBURST;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARLOCK;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARCACHE;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARPROT;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARQOS;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARREGION;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARUSER;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_RREADY;
wire    grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_BREADY;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_done;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_idle;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_ready;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWVALID;
wire   [63:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWADDR;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWID;
wire   [31:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWLEN;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWSIZE;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWBURST;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWLOCK;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWCACHE;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWPROT;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWQOS;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWREGION;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWUSER;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WVALID;
wire   [127:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WDATA;
wire   [15:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WSTRB;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WLAST;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WID;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WUSER;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARVALID;
wire   [63:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARADDR;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARID;
wire   [31:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARLEN;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARSIZE;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARBURST;
wire   [1:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARLOCK;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARCACHE;
wire   [2:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARPROT;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARQOS;
wire   [3:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARREGION;
wire   [0:0] grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARUSER;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_RREADY;
wire    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_BREADY;
reg    mm_video0_0_AWVALID;
wire    mm_video0_0_AWREADY;
reg   [63:0] mm_video0_0_AWADDR;
reg   [31:0] mm_video0_0_AWLEN;
reg    mm_video0_0_WVALID;
wire    mm_video0_0_WREADY;
reg   [127:0] mm_video0_0_WDATA;
reg   [15:0] mm_video0_0_WSTRB;
wire    mm_video0_0_ARREADY;
wire    mm_video0_0_RVALID;
wire   [127:0] mm_video0_0_RDATA;
wire   [8:0] mm_video0_0_RFIFONUM;
wire    mm_video0_0_BVALID;
reg    mm_video0_0_BREADY;
reg    grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [31:0] nPos_dstY1_1_fu_108;
wire   [31:0] nPos_dstY1_fu_357_p2;
wire   [0:0] icmp_ln52_fu_256_p2;
reg   [31:0] nPos_dstUV1_1_fu_112;
wire   [31:0] nPos_dstUV1_fu_362_p2;
reg   [30:0] i_fu_116;
wire   [30:0] i_2_fu_261_p2;
wire   [27:0] lshr_ln_fu_200_p4;
wire   [27:0] lshr_ln1_fu_214_p4;
wire   [35:0] shl_ln1_fu_273_p3;
wire   [63:0] zext_ln55_fu_281_p1;
wire   [63:0] add_ln55_fu_285_p2;
wire   [35:0] shl_ln55_1_fu_300_p3;
wire   [63:0] zext_ln55_1_fu_308_p1;
wire   [63:0] add_ln55_1_fu_312_p2;
wire   [63:0] add_ln63_fu_327_p2;
wire   [63:0] add_ln63_1_fu_342_p2;
wire   [3:0] trunc_ln58_fu_382_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg = 1'b0;
#0 grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg = 1'b0;
#0 nPos_dstY1_1_fu_108 = 32'd0;
#0 nPos_dstUV1_1_fu_112 = 32'd0;
#0 i_fu_116 = 31'd0;
end

aximm_test0_aximm_test0_Pipeline_loop_width_even grp_aximm_test0_Pipeline_loop_width_even_fu_168(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start),
    .ap_done(grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_done),
    .ap_idle(grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_idle),
    .ap_ready(grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_ready),
    .m_axi_mm_video0_0_AWVALID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWVALID),
    .m_axi_mm_video0_0_AWREADY(mm_video0_0_AWREADY),
    .m_axi_mm_video0_0_AWADDR(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWADDR),
    .m_axi_mm_video0_0_AWID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWID),
    .m_axi_mm_video0_0_AWLEN(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWLEN),
    .m_axi_mm_video0_0_AWSIZE(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWSIZE),
    .m_axi_mm_video0_0_AWBURST(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWBURST),
    .m_axi_mm_video0_0_AWLOCK(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWLOCK),
    .m_axi_mm_video0_0_AWCACHE(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWCACHE),
    .m_axi_mm_video0_0_AWPROT(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWPROT),
    .m_axi_mm_video0_0_AWQOS(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWQOS),
    .m_axi_mm_video0_0_AWREGION(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWREGION),
    .m_axi_mm_video0_0_AWUSER(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWUSER),
    .m_axi_mm_video0_0_WVALID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WVALID),
    .m_axi_mm_video0_0_WREADY(mm_video0_0_WREADY),
    .m_axi_mm_video0_0_WDATA(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WDATA),
    .m_axi_mm_video0_0_WSTRB(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WSTRB),
    .m_axi_mm_video0_0_WLAST(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WLAST),
    .m_axi_mm_video0_0_WID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WID),
    .m_axi_mm_video0_0_WUSER(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WUSER),
    .m_axi_mm_video0_0_ARVALID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARVALID),
    .m_axi_mm_video0_0_ARREADY(1'b0),
    .m_axi_mm_video0_0_ARADDR(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARADDR),
    .m_axi_mm_video0_0_ARID(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARID),
    .m_axi_mm_video0_0_ARLEN(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARLEN),
    .m_axi_mm_video0_0_ARSIZE(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARSIZE),
    .m_axi_mm_video0_0_ARBURST(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARBURST),
    .m_axi_mm_video0_0_ARLOCK(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARLOCK),
    .m_axi_mm_video0_0_ARCACHE(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARCACHE),
    .m_axi_mm_video0_0_ARPROT(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARPROT),
    .m_axi_mm_video0_0_ARQOS(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARQOS),
    .m_axi_mm_video0_0_ARREGION(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARREGION),
    .m_axi_mm_video0_0_ARUSER(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_ARUSER),
    .m_axi_mm_video0_0_RVALID(1'b0),
    .m_axi_mm_video0_0_RREADY(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_RREADY),
    .m_axi_mm_video0_0_RDATA(128'd0),
    .m_axi_mm_video0_0_RLAST(1'b0),
    .m_axi_mm_video0_0_RID(1'd0),
    .m_axi_mm_video0_0_RFIFONUM(9'd0),
    .m_axi_mm_video0_0_RUSER(1'd0),
    .m_axi_mm_video0_0_RRESP(2'd0),
    .m_axi_mm_video0_0_BVALID(mm_video0_0_BVALID),
    .m_axi_mm_video0_0_BREADY(grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_BREADY),
    .m_axi_mm_video0_0_BRESP(2'd0),
    .m_axi_mm_video0_0_BID(1'd0),
    .m_axi_mm_video0_0_BUSER(1'd0),
    .trunc_ln1(trunc_ln1_reg_450),
    .shl_ln(shl_ln_reg_486),
    .i(i_1_reg_456),
    .sext_ln55(trunc_ln2_reg_466),
    .sext_ln55_1(trunc_ln55_1_reg_471)
);

aximm_test0_aximm_test0_Pipeline_loop_width_odd grp_aximm_test0_Pipeline_loop_width_odd_fu_179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start),
    .ap_done(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_done),
    .ap_idle(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_idle),
    .ap_ready(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_ready),
    .m_axi_mm_video0_0_AWVALID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWVALID),
    .m_axi_mm_video0_0_AWREADY(mm_video0_0_AWREADY),
    .m_axi_mm_video0_0_AWADDR(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWADDR),
    .m_axi_mm_video0_0_AWID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWID),
    .m_axi_mm_video0_0_AWLEN(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWLEN),
    .m_axi_mm_video0_0_AWSIZE(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWSIZE),
    .m_axi_mm_video0_0_AWBURST(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWBURST),
    .m_axi_mm_video0_0_AWLOCK(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWLOCK),
    .m_axi_mm_video0_0_AWCACHE(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWCACHE),
    .m_axi_mm_video0_0_AWPROT(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWPROT),
    .m_axi_mm_video0_0_AWQOS(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWQOS),
    .m_axi_mm_video0_0_AWREGION(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWREGION),
    .m_axi_mm_video0_0_AWUSER(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWUSER),
    .m_axi_mm_video0_0_WVALID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WVALID),
    .m_axi_mm_video0_0_WREADY(mm_video0_0_WREADY),
    .m_axi_mm_video0_0_WDATA(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WDATA),
    .m_axi_mm_video0_0_WSTRB(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WSTRB),
    .m_axi_mm_video0_0_WLAST(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WLAST),
    .m_axi_mm_video0_0_WID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WID),
    .m_axi_mm_video0_0_WUSER(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WUSER),
    .m_axi_mm_video0_0_ARVALID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARVALID),
    .m_axi_mm_video0_0_ARREADY(1'b0),
    .m_axi_mm_video0_0_ARADDR(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARADDR),
    .m_axi_mm_video0_0_ARID(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARID),
    .m_axi_mm_video0_0_ARLEN(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARLEN),
    .m_axi_mm_video0_0_ARSIZE(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARSIZE),
    .m_axi_mm_video0_0_ARBURST(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARBURST),
    .m_axi_mm_video0_0_ARLOCK(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARLOCK),
    .m_axi_mm_video0_0_ARCACHE(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARCACHE),
    .m_axi_mm_video0_0_ARPROT(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARPROT),
    .m_axi_mm_video0_0_ARQOS(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARQOS),
    .m_axi_mm_video0_0_ARREGION(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARREGION),
    .m_axi_mm_video0_0_ARUSER(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_ARUSER),
    .m_axi_mm_video0_0_RVALID(1'b0),
    .m_axi_mm_video0_0_RREADY(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_RREADY),
    .m_axi_mm_video0_0_RDATA(128'd0),
    .m_axi_mm_video0_0_RLAST(1'b0),
    .m_axi_mm_video0_0_RID(1'd0),
    .m_axi_mm_video0_0_RFIFONUM(9'd0),
    .m_axi_mm_video0_0_RUSER(1'd0),
    .m_axi_mm_video0_0_RRESP(2'd0),
    .m_axi_mm_video0_0_BVALID(mm_video0_0_BVALID),
    .m_axi_mm_video0_0_BREADY(grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_BREADY),
    .m_axi_mm_video0_0_BRESP(2'd0),
    .m_axi_mm_video0_0_BID(1'd0),
    .m_axi_mm_video0_0_BUSER(1'd0),
    .trunc_ln1(trunc_ln1_reg_450),
    .shl_ln(shl_ln_reg_486),
    .i(i_1_reg_456),
    .sext_ln63(trunc_ln3_reg_476),
    .sext_ln63_1(trunc_ln63_1_reg_481)
);

aximm_test0_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .pDstY0(pDstY0),
    .pDstUV0(pDstUV0),
    .pDstY1(pDstY1),
    .pDstUV1(pDstUV1),
    .nDstStrideY(nDstStrideY),
    .nDstStrideUV(nDstStrideUV),
    .nWidth(nWidth),
    .nHeight(nHeight),
    .nControl(nControl),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

aximm_test0_mm_video0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 4 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MM_VIDEO0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MM_VIDEO0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MM_VIDEO0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MM_VIDEO0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MM_VIDEO0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MM_VIDEO0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MM_VIDEO0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MM_VIDEO0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MM_VIDEO0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MM_VIDEO0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MM_VIDEO0_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 128 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 0 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
mm_video0_m_axi_U(
    .AWVALID(m_axi_mm_video0_AWVALID),
    .AWREADY(m_axi_mm_video0_AWREADY),
    .AWADDR(m_axi_mm_video0_AWADDR),
    .AWID(m_axi_mm_video0_AWID),
    .AWLEN(m_axi_mm_video0_AWLEN),
    .AWSIZE(m_axi_mm_video0_AWSIZE),
    .AWBURST(m_axi_mm_video0_AWBURST),
    .AWLOCK(m_axi_mm_video0_AWLOCK),
    .AWCACHE(m_axi_mm_video0_AWCACHE),
    .AWPROT(m_axi_mm_video0_AWPROT),
    .AWQOS(m_axi_mm_video0_AWQOS),
    .AWREGION(m_axi_mm_video0_AWREGION),
    .AWUSER(m_axi_mm_video0_AWUSER),
    .WVALID(m_axi_mm_video0_WVALID),
    .WREADY(m_axi_mm_video0_WREADY),
    .WDATA(m_axi_mm_video0_WDATA),
    .WSTRB(m_axi_mm_video0_WSTRB),
    .WLAST(m_axi_mm_video0_WLAST),
    .WID(m_axi_mm_video0_WID),
    .WUSER(m_axi_mm_video0_WUSER),
    .ARVALID(m_axi_mm_video0_ARVALID),
    .ARREADY(m_axi_mm_video0_ARREADY),
    .ARADDR(m_axi_mm_video0_ARADDR),
    .ARID(m_axi_mm_video0_ARID),
    .ARLEN(m_axi_mm_video0_ARLEN),
    .ARSIZE(m_axi_mm_video0_ARSIZE),
    .ARBURST(m_axi_mm_video0_ARBURST),
    .ARLOCK(m_axi_mm_video0_ARLOCK),
    .ARCACHE(m_axi_mm_video0_ARCACHE),
    .ARPROT(m_axi_mm_video0_ARPROT),
    .ARQOS(m_axi_mm_video0_ARQOS),
    .ARREGION(m_axi_mm_video0_ARREGION),
    .ARUSER(m_axi_mm_video0_ARUSER),
    .RVALID(m_axi_mm_video0_RVALID),
    .RREADY(m_axi_mm_video0_RREADY),
    .RDATA(m_axi_mm_video0_RDATA),
    .RLAST(m_axi_mm_video0_RLAST),
    .RID(m_axi_mm_video0_RID),
    .RUSER(m_axi_mm_video0_RUSER),
    .RRESP(m_axi_mm_video0_RRESP),
    .BVALID(m_axi_mm_video0_BVALID),
    .BREADY(m_axi_mm_video0_BREADY),
    .BRESP(m_axi_mm_video0_BRESP),
    .BID(m_axi_mm_video0_BID),
    .BUSER(m_axi_mm_video0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(1'b0),
    .I_CH0_ARREADY(mm_video0_0_ARREADY),
    .I_CH0_ARADDR(64'd0),
    .I_CH0_ARLEN(32'd0),
    .I_CH0_RVALID(mm_video0_0_RVALID),
    .I_CH0_RREADY(1'b0),
    .I_CH0_RDATA(mm_video0_0_RDATA),
    .I_CH0_RFIFONUM(mm_video0_0_RFIFONUM),
    .I_CH0_AWVALID(mm_video0_0_AWVALID),
    .I_CH0_AWREADY(mm_video0_0_AWREADY),
    .I_CH0_AWADDR(mm_video0_0_AWADDR),
    .I_CH0_AWLEN(mm_video0_0_AWLEN),
    .I_CH0_WVALID(mm_video0_0_WVALID),
    .I_CH0_WREADY(mm_video0_0_WREADY),
    .I_CH0_WDATA(mm_video0_0_WDATA),
    .I_CH0_WSTRB(mm_video0_0_WSTRB),
    .I_CH0_BVALID(mm_video0_0_BVALID),
    .I_CH0_BREADY(mm_video0_0_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg <= 1'b1;
        end else if ((grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_ready == 1'b1)) begin
            grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg <= 1'b1;
        end else if ((grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_ready == 1'b1)) begin
            grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_116 <= 31'd0;
    end else if (((icmp_ln52_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_116 <= i_2_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPos_dstUV1_1_fu_112 <= 32'd0;
    end else if (((icmp_ln52_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        nPos_dstUV1_1_fu_112 <= nPos_dstUV1_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPos_dstY1_1_fu_108 <= 32'd0;
    end else if (((icmp_ln52_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        nPos_dstY1_1_fu_108 <= nPos_dstY1_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_456 <= i_fu_116;
        trunc_ln2_reg_466 <= {{add_ln55_fu_285_p2[63:4]}};
        trunc_ln3_reg_476 <= {{add_ln63_fu_327_p2[63:4]}};
        trunc_ln55_1_reg_471 <= {{add_ln55_1_fu_312_p2[63:4]}};
        trunc_ln63_1_reg_481 <= {{add_ln63_1_fu_342_p2[63:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        pDstUV0_read_reg_425 <= pDstUV0;
        pDstUV1_read_reg_415 <= pDstUV1;
        pDstY0_read_reg_430 <= pDstY0;
        pDstY1_read_reg_420 <= pDstY1;
        trunc_ln1_reg_450 <= {{nWidth[31:4]}};
        trunc_ln_reg_435 <= {{nHeight[31:1]}};
        zext_ln35_reg_440[27 : 0] <= zext_ln35_fu_210_p1[27 : 0];
        zext_ln36_reg_445[27 : 0] <= zext_ln36_fu_224_p1[27 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        shl_ln_reg_486[27 : 24] <= shl_ln_fu_385_p3[27 : 24];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_AWADDR = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_AWADDR = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWADDR;
    end else begin
        mm_video0_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_AWLEN = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_AWLEN = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWLEN;
    end else begin
        mm_video0_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_AWVALID = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_AWVALID = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_AWVALID;
    end else begin
        mm_video0_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_BREADY = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_BREADY = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_BREADY;
    end else begin
        mm_video0_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_WDATA = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_WDATA = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WDATA;
    end else begin
        mm_video0_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_WSTRB = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_WSTRB = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WSTRB;
    end else begin
        mm_video0_0_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mm_video0_0_WVALID = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_m_axi_mm_video0_0_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video0_0_WVALID = grp_aximm_test0_Pipeline_loop_width_even_fu_168_m_axi_mm_video0_0_WVALID;
    end else begin
        mm_video0_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln52_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_312_p2 = (zext_ln55_1_fu_308_p1 + pDstUV0_read_reg_425);

assign add_ln55_fu_285_p2 = (zext_ln55_fu_281_p1 + pDstY0_read_reg_430);

assign add_ln63_1_fu_342_p2 = (zext_ln55_1_fu_308_p1 + pDstUV1_read_reg_415);

assign add_ln63_fu_327_p2 = (zext_ln55_fu_281_p1 + pDstY1_read_reg_420);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start = grp_aximm_test0_Pipeline_loop_width_even_fu_168_ap_start_reg;

assign grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start = grp_aximm_test0_Pipeline_loop_width_odd_fu_179_ap_start_reg;

assign i_2_fu_261_p2 = (i_fu_116 + 31'd1);

assign icmp_ln52_fu_256_p2 = ((i_fu_116 == trunc_ln_reg_435) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_214_p4 = {{nDstStrideUV[31:4]}};

assign lshr_ln_fu_200_p4 = {{nDstStrideY[31:4]}};

assign nPos_dstUV1_fu_362_p2 = (zext_ln36_reg_445 + nPos_dstUV1_1_fu_112);

assign nPos_dstY1_fu_357_p2 = (zext_ln35_reg_440 + nPos_dstY1_1_fu_108);

assign shl_ln1_fu_273_p3 = {{nPos_dstY1_1_fu_108}, {4'd0}};

assign shl_ln55_1_fu_300_p3 = {{nPos_dstUV1_1_fu_112}, {4'd0}};

assign shl_ln_fu_385_p3 = {{trunc_ln58_fu_382_p1}, {24'd0}};

assign trunc_ln58_fu_382_p1 = i_1_reg_456[3:0];

assign zext_ln35_fu_210_p1 = lshr_ln_fu_200_p4;

assign zext_ln36_fu_224_p1 = lshr_ln1_fu_214_p4;

assign zext_ln55_1_fu_308_p1 = shl_ln55_1_fu_300_p3;

assign zext_ln55_fu_281_p1 = shl_ln1_fu_273_p3;

always @ (posedge ap_clk) begin
    zext_ln35_reg_440[31:28] <= 4'b0000;
    zext_ln36_reg_445[31:28] <= 4'b0000;
    shl_ln_reg_486[23:0] <= 24'b000000000000000000000000;
end

endmodule //aximm_test0
